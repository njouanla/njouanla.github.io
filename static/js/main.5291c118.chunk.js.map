{"version":3,"sources":["utils/fetch.js","common/styles.js","trips/Trip.jsx","trips/TripsList.jsx","App.jsx","index.jsx"],"names":["fetchTrips","url","a","request","buildRequest","fetch","response","status","Error","json","headers","Accept","method","AppScreen","styled","div","Title","span","AvailableTrips","List","StyledTrip","TripProperties","WayPoint","Attribute","ColoredAttribute","props","isPrice","CURRENCY","PropTypes","shape","distance_in_meters","number","duration_in_seconds","link","string","price","amount","currency","waypoints","arrayOf","date_time","place","address","city","country_code","latitude","longitude","Trip","tripData","map","waypoint","index","Date","getHours","getMinutes","href","TripsList","trips","length","trip","App","useState","setTrips","useEffect","then","result","catch","_","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAaA,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DAChBC,EAAUC,IADM,SAECC,MAAM,QAAD,OAASJ,GAAOE,GAFtB,UAGE,OADlBG,EAFgB,QAGTC,OAHS,sBAGa,IAAIC,MAAM,+BAHvB,uBAITF,EAASG,OAJA,mFAAH,sDAOjBL,EAAe,WAOjB,MAAO,CAAEM,QANO,CACZC,OAAQ,mBACR,kBAAmB,KACnB,gBAAiB,WACjB,eAAgB,oBAEFC,OAAQ,Q,4oCCZvB,IAAMC,EAAYC,IAAOC,IAAV,KAITC,EAAQF,IAAOG,KAAV,KAILC,EAAiBJ,IAAOC,IAAV,KAMdI,EAAOL,IAAOC,IAAV,KAUJK,EAAaN,IAAOC,IAAV,KAQVM,EAAiBP,IAAOC,IAAV,KAIdO,EAAWR,IAAOC,IAAV,KAKRQ,EAAYT,IAAOC,IAAV,KAKTS,EAAmBV,YAAOS,EAAPT,CAAH,KAEZ,SAAAW,GAAK,OAAIA,EAAMC,QAAU,OAAS,UCxB7CC,GArBQC,IAAUC,MAAM,CACtBC,mBAAoBF,IAAUG,OAC9BC,oBAAqBJ,IAAUG,OAC/BE,KAAML,IAAUM,OAChBC,MAAOP,IAAUC,MAAM,CACnBO,OAAQR,IAAUM,OAClBG,SAAUT,IAAUM,SAExBI,UAAWV,IAAUW,QAAQX,IAAUC,MAAM,CACzCW,UAAWZ,IAAUM,OACrBO,MAAOb,IAAUC,MAAM,CACnBa,QAASd,IAAUM,OACnBS,KAAMf,IAAUM,OAChBU,aAAchB,IAAUM,OACxBW,SAAUjB,IAAUG,OACpBe,UAAWlB,IAAUG,cAMpB,CACb,IAAO,WA0BIgB,EAvBF,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACX,OACI,eAAC5B,EAAD,WACI,eAACC,EAAD,WACI,8BACK2B,EAASV,UAAUW,KAAI,SAACC,EAAUC,GAAX,OACpB,eAAC7B,EAAD,WACI,cAACC,EAAD,oBAAe,IAAI6B,KAAKF,EAASV,WAAWa,WAA5C,YAA0D,IAAID,KAAKF,EAASV,WAAWc,gBACvF,cAAC9B,EAAD,CAAkBE,SAAS,EAA3B,SAAmCwB,EAAST,MAAME,SAFvCQ,QAMvB,eAAC3B,EAAD,CAAkBE,SAAS,EAA3B,UACKsB,EAASb,MAAMC,OACfT,EAASqB,EAASb,MAAME,gBAGjC,mBAAGkB,KAAMP,EAASf,KAAlB,mCCZGuB,EARG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAChB,OAAO,cAACtC,EAAD,UAAOsC,EAAMC,OAAS,EACzBD,EAAMR,KAAI,SAACU,EAAMR,GAAP,OAAiB,cAAC,EAAD,CAAkBH,SAAUW,GAAjBR,MACtC,+DCLOS,EAlBH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTJ,EADS,KACFK,EADE,KAShB,OANAC,qBAAU,WACR/D,EANyB,kNAOxBgE,MAAK,SAAAC,GAAM,OAAIH,EAASG,EAAOR,UAC/BS,OAAM,SAAAC,GAAC,OAAIL,EAAS,SACpB,IAGD,eAACjD,EAAD,WACE,cAACG,EAAD,wBACE,cAACE,EAAD,oBAAoBuC,EAAMC,OAA1B,0BACF,cAAC,EAAD,CAAWD,MAAOA,QCfxBW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.5291c118.chunk.js","sourcesContent":["export const fetchTrips = async (url) => {\r\n    const request = buildRequest();\r\n    const response = await fetch(`/api/${url}`, request);\r\n    if (response.status !== 200) throw new Error('Data could not be retrieved');\r\n    return await response.json();\r\n};\r\n\r\nconst buildRequest = () => {\r\n    const headers = {\r\n        Accept: 'application/json',\r\n        'Accept-Language': 'fr',\r\n        'cache-control': 'no-cache',\r\n        'Content-Type': 'application/json'\r\n    };\r\n    return { headers, method: 'GET' };\r\n};","import styled from \"styled-components\";\r\n\r\nexport const AppScreen = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport const Title = styled.span`\r\n  font-size: 40px;\r\n`;\r\n\r\nexport const AvailableTrips = styled.div`\r\n  color: #928888;\r\n  font-size: 18px;\r\n  margin: 60px 0;\r\n`;\r\n\r\nexport const List = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  \r\n  & > div {\r\n    margin-bottom: 30px;\r\n  }\r\n`;\r\n\r\nexport const StyledTrip = styled.div`\r\n  border: 1px solid #dbd0d0;\r\n  border-radius: 4px;\r\n  box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);\r\n  padding: 10px;\r\n  width: 550px;\r\n`;\r\n\r\nexport const TripProperties = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const WayPoint = styled.div`\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const Attribute = styled.div`\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n`;\r\n\r\nexport const ColoredAttribute = styled(Attribute)`\r\n  color: #395abe;\r\n  margin-left: ${props => props.isPrice ? 'auto' : '10px'};\r\n`","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Attribute, ColoredAttribute,StyledTrip, TripProperties, WayPoint} from \"../common/styles\";\r\n\r\nexport const propTypes = {\r\n    tripData: PropTypes.shape({\r\n        distance_in_meters: PropTypes.number,\r\n        duration_in_seconds: PropTypes.number,\r\n        link: PropTypes.string,\r\n        price: PropTypes.shape({\r\n            amount: PropTypes.string,\r\n            currency: PropTypes.string\r\n        }),\r\n        waypoints: PropTypes.arrayOf(PropTypes.shape({\r\n            date_time: PropTypes.string,\r\n            place: PropTypes.shape({\r\n                address: PropTypes.string,\r\n                city: PropTypes.string,\r\n                country_code: PropTypes.string,\r\n                latitude: PropTypes.number,\r\n                longitude: PropTypes.number\r\n            })\r\n        }))\r\n    })\r\n};\r\n\r\nconst CURRENCY = {\r\n    'EUR': '€'\r\n};\r\n\r\nconst Trip = ({tripData}) => {\r\n    return (\r\n        <StyledTrip>\r\n            <TripProperties>\r\n                <div>\r\n                    {tripData.waypoints.map((waypoint, index) => (\r\n                        <WayPoint key={index}>\r\n                            <Attribute>{`${new Date(waypoint.date_time).getHours()}:${new Date(waypoint.date_time).getMinutes()}`}</Attribute>\r\n                            <ColoredAttribute isPrice={false}>{waypoint.place.city}</ColoredAttribute>\r\n                        </WayPoint>\r\n                    ))}\r\n                </div>\r\n                <ColoredAttribute isPrice={true}>\r\n                    {tripData.price.amount}\r\n                    {CURRENCY[tripData.price.currency]}\r\n                </ColoredAttribute>\r\n            </TripProperties>\r\n            <a href={tripData.link}>Voir le détail</a>\r\n        </StyledTrip>\r\n    )\r\n};\r\n\r\nTrip.propTypes = propTypes;\r\nexport default Trip;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Trip from \"./Trip\";\r\nimport { List } from '../common/styles';\r\n\r\nconst propTypes = {\r\n  trips: PropTypes.arrayOf(PropTypes.shape(PropTypes.shape({\r\n      distance_in_meters: PropTypes.number,\r\n      duration_in_seconds: PropTypes.number,\r\n      link: PropTypes.string,\r\n      price: PropTypes.shape({\r\n          amount: PropTypes.string,\r\n          currency: PropTypes.string\r\n      }),\r\n      waypoints: PropTypes.arrayOf(PropTypes.shape({\r\n          date_time: PropTypes.string,\r\n          place: PropTypes.shape({\r\n              address: PropTypes.string,\r\n              city: PropTypes.string,\r\n              country_code: PropTypes.string,\r\n              latitude: PropTypes.number,\r\n              longitude: PropTypes.number\r\n          })\r\n      }))\r\n  })))\r\n};\r\n\r\nconst TripsList = ({trips}) => {\r\n    return <List>{trips.length > 0 ?\r\n        trips.map((trip, index) => <Trip key={index} tripData={trip} />) :\r\n        <span>Pas de trajet disponible</span>}\r\n    </List>;\r\n};\r\n\r\nTripsList.propTypes = propTypes;\r\nexport default TripsList;","import React, { useEffect, useState } from 'react';\nimport { fetchTrips } from './utils/fetch';\nimport TripsList from \"./trips/TripsList\";\nimport { AppScreen, AvailableTrips, Title} from \"./common/styles\";\n\nexport const BLABLACAR_URL = 'v3/trips?key=YzbiA8L6DcqxTvSna1lOFQQU66FosDVs&from_coordinate=48.8566%2C2.3522&to_coordinate=45.764043%2C4.835659&from_country=FR&to_country=FR&locale=fr-FR&start_date_local=2020-11-21T08:00:00&currency=EUR';\n\nconst App = () => {\n  const [trips, setTrips] = useState([]);\n\n  useEffect(() => {\n    fetchTrips(BLABLACAR_URL)\n    .then(result => setTrips(result.trips))\n    .catch(_ => setTrips([]))\n  }, []);\n\n  return (\n    <AppScreen>\n      <Title>Blablacar</Title>\n        <AvailableTrips>{`${trips.length} trajets disponibles`}</AvailableTrips>\n      <TripsList trips={trips} />\n    </AppScreen>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}